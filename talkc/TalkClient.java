package talkc;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class TalkClient {
	public static void main(String args[]) {
		UI.init();
		try {
			// 向本机的4700端口发出客户请求
			Socket socket = new Socket("127.0.0.1", 4700);
			// 由系统标准输入设备构造BufferedReader对象
			BufferedReader sin = new BufferedReader(new InputStreamReader(
					System.in));
			// 由Socket对象得到输出流，并构造PrintWriter对象
			PrintWriter os = new PrintWriter(socket.getOutputStream());
			// 由Socket对象得到输入流，并构造相应的BufferedReader对象
			BufferedReader is = new BufferedReader(new InputStreamReader(
					socket.getInputStream()));
			String readline;
			String rev;
			// 若从标准输入读入的字符串为 "bye"则停止循环
			while (true) {
				readline = sin.readLine(); // 从系统标准输入读入一字符串
				// 将从系统标准输入读入的字符串输出到Server
				os.println(readline);				
				// 刷新输出流，使Server马上收到该字符串
				os.flush();
				// 在系统标准输出上打印读入的字符串
				System.out.println("Client:" + readline);
				// 从Server读入一字符串
				rev = is.readLine();
				System.out.println("Server:" + rev);
				if(rev.equals("创建成功"))
				{
					UI.init();
				}
				if(rev.equals("登陆成功"))
				{
					UI.logged();
				}
				if(rev.equals("更新成功"))
				{
					UI.logged();
				}
				if(rev.equals("查询成功"))
				{
					UI.logged();
				}
				if(rev.equals("删除成功"))
				{
					UI.init();
				}
				if(rev.equals("注销成功"))
				{
					UI.init();
				}
				if(rev.equals("退出成功"))
				{
					break;
				}
			}
			os.close(); // 关闭Socket输出流
			is.close(); // 关闭Socket输入流
			socket.close(); // 关闭Socket
		} catch (Exception e) {
			System.out.println("Error" + e); // 出错，则打印出错信息
		}
	}
}